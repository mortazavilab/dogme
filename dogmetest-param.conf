
params {
    sample = 'nxtest'
    //readType can either be 'RNA', 'DNA' or 'CDNA'
    readType = 'RNA'
    // modification type should be set as necessary if different from 'inosine_m6A,pseU,m5C' for RNA and '5mCG_5hmCG,6mA' for DNA. 
    //modifications = '2OmeG,m5C_2OmeC,inosine_m6A_2OmeA,pseU_2OmeU'
    //change setting if necessary 
    minCov = 3
    perMod = 5
    // change if the launch directory is not where the pod5 and output directories should go
    topDir = "${launchDir}"

    // the following file should be edited to add all the necessary paths for commands such as
    // dorado, samtools, minimap2, kallisto, and bustools
    scriptEnv = "${launchDir}/dogme.profile"
    
    // needs to be modified to match the right genomic reference
    // genome_annot_refs = [
      //[name: 'genome1', genome: '/path/genome1.fa', annot: '/path/annot1.gtf'],
      //[name: 'genome2', genome: '/path/genome2.fa', annot: '/path/annot2.gtf']
    //]
    genome_annot_refs = [
      [name: 'mm39', 
      genome: '/share/crsp/lab/seyedam/share/bridge_dRNA/kallistoref/GRCm39.primary_assembly.genome.fa', 
      annot: '/share/crsp/lab/seyedam/share/bridge_dRNA/kallistoref/gencode.vM36.annotation.gtf'
      ]
    ]

    kallistoIndex = '/share/crsp/lab/seyedam/share/bridge_dRNA/kallistoref/mm39GencM36_k63.idx'
    t2g = '/share/crsp/lab/seyedam/share/bridge_dRNA/kallistoref/mm39GencM36_k63.t2g'
    
    //default accuracy is sup
    accuracy = "sup"
    // change this value if 0.9 is too strict
    // if set to null or '' then modkit will determine its threshold by sampling reads. 
    modkitFilterThreshold = 0.9 

    // these paths are all based on the topDir and sample name
    // dogme will populate all of these folders with its output
    modDir = "${topDir}/dorModels"
    dorDir = "${topDir}/dor8-${sample}"
    podDir = "${topDir}/pod5/"
    bamDir = "${topDir}/bams"
    annotDir = "${topDir}/annot"
    bedDir = "${topDir}/bedMethyl"
    fastqDir = "${topDir}/fastqs"
    kallistoDir = "${topDir}/kallisto"
    tmpDir = '/tmp'  // Temporary directory for disk-based sorting
}

process {
    executor = 'slurm'
    cpuPartition = 'standard'
    gpuPartition = 'gpu'
    cpuAccount = 'SEYEDAM_LAB'
    gpuAccount = 'SEYEDAM_LAB_GPU'

    // General default settings - adjust as necessary
    cpus = 12                 
    memory = '64 GB'          
    time = '8:00:00'         
    clusterOptions = "--account=${cpuAccount}"
    queue = "${cpuPartition}"

    withName: 'doradoTask' {
        clusterOptions = "--account=${gpuAccount} --gres=gpu:A100:1 --output=logs/doradoTask-%j.out --error=logs/doradoTask-%j.err"
        memory = '9 GB'  // Increase if necessary
        cpus = 4         // dorado is more GPU intensive than CPU intensive
        queue = "${gpuPartition}"
    }

     withName: 'openChromatinTask' {
        clusterOptions = "--account=${gpuAccount} --output=logs/modkitOpenTask-%j.out --error=logs/modkitOpenTask-%j.err"
        memory = '9 GB'  // Increase if necessary
        cpus = 4         // modkit for open chromatin is more GPU intensive than CPU intensive
        queue = "${gpuPartition}"
    }

    withName: 'minimapTask' {
        memory = '120 GB'  // Increase memory for minimap2
    }
}

timeline {
    enabled = true
    file = "${params.sample}_timeline.html"
}

report {
    enabled = true
    file = "${params.sample}_report.html"
}

trace {
    enabled = true
    file = "${params.sample}_trace.txt"
}
